# 딕셔너리의 매개변수

# 함수 -> 코드를 묶어서 효과적으로 관리. 구조화
# 리스트 -> 데이터를 묶어서 효과적으로 관리. 구조화

# 사람

# 사람을 이루는 정보는 매우 다양. 이름, 나이, 고향, 키, 몸무게, 성별, 국적 .... 등등


# 자기소개 함수
def introduce(person) : 
    print("{}사는 {}살 {}입니다.".
          format(person["거주지"], person["나이"], person["이름"]))

# 이름, 나이, 거주지
# 23살 대전 홍길동

# 변수로 표현하면 데이터 관리가 힘들다.
# age = 23
# name = "홍길동"
# home = "대전"

# 딕셔너리 -> 데이터 구조화 
hong = {"나이" : 23, "이름" : "홍길동", "거주지" : "대전"}

# print(hong["나이"])
# print(hong["이름"])
# print(hong["거주지"])

introduce(hong) 

# 33살 서울 이순신
# age2 = 33
# name2 = "이순신"
# home2 = "서울"

lee = {"나이" : 33, "이름" : "이순신", "거주지" : "서울"}
introduce(lee)
